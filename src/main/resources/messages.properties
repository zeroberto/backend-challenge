# Entity
## Order
### Attributes
entity.order.attr.address=Address
entity.order.attr.confirmation_date=Confirmation date
entity.order.attr.status=Status
### Validation
entity.order.validation.address.not_null=Address can not be null
entity.order.validation.address.out_of_range=Address size is out of bounds
entity.order.validation.status.not_null=Status can not be null
entity.order.validation.confirmation_date.not_null=Confirmation date can not be null
entity.order.validation.order_items.not_null=Order Items can not be null
entity.order.validation.order_items.not_empty=Order Items can not be empty
entity.order.validation.payment.not_null=Payment can not be null
### Business Rules
entity.order.service.payment.already_been_done=A payment has already been made for the order
entity.order.service.payment.no_payment=No payment was made for this order
entity.order.service.deadline_expired=We were unable to complete the refund. The maximum repayment term has expired.
## OrderItem
### Attributes
entity.orderitem.attr.description=Description
entity.orderitem.attr.quantity=Quantity
entity.orderitem.attr.unit_price=Unit price
entity.orderitem.attr.order=Order
### Validation
entity.orderitem.validation.unit_price.not_null=Unit price can not be null
entity.orderitem.validation.unit_price.not_negative=Unit price can not be negative
entity.orderitem.validation.quantity.not_null=Quantity can not be null
entity.orderitem.validation.quantity.greater_than_zero=Quantity must be greater than zero
entity.orderitem.validation.order.not_null=Order can not be null
## Payment
### Attributes
entity.payment.attr.card_number=Card number
entity.payment.attr.description=Description
entity.payment.attr.payment_date=Payment date
entity.payment.attr.order=Order
### Validation
entity.payment.validation.card_number.not_null=Card number can not be null
entity.payment.validation.card_number.invalid=The card number can only have numbers
entity.payment.validation.card_number.out_of_range=The card number must have 16 numbers
entity.payment.validation.payment_date.not_null=Payment date can not be null
entity.payment.validation.order.not_null=Order can not be null
## Store
### Attributes
entity.store.attr.address=Address
entity.store.attr.name=Name
### Validation
entity.store.validation.address.not_null=Address can not be null
entity.store.validation.address.out_of_range=Address size is out of bounds
entity.store.validation.name.not_null=Name can not be null
entity.store.validation.name.out_of_range=Name size is out of bounds
## User
### Attributes
entity.user.attr.username=Username
entity.user.attr.password=Password
### Validation
entity.user.validation.username.not_null=Username can not be null
entity.user.validation.username.out_of_range=Username size is out of bounds
entity.user.validation.password.not_null=Password can not be null
entity.user.validation.password.out_of_range=Password size is out of bounds
# Api Documentation
## RestController
### BasicApiRestController
controller.default.api.get.method_description=Get all saved resources
controller.default.api.get_one.method_description=Get a resource by identifier
controller.default.api.post.method_description=Create a new resource
controller.default.api.put.method_description=Update an existing resource or create if it does not exist
controller.default.api.delete.method_description=Remove an existing respurce
controller.default.api.patch.method_description=Partially upgrade an existing resource
### OrderApiRestController
controller.order.api.pay.method_description=Make payment for an order
controller.order.api.refund.method_description=Repay a payment for an order
### StoreApiRestController
controller.store.api.get_one_by_name.method_description=Get a store by name
### UserApiRestController
controller.user.api.login.method_description=Authenticate in app
controller.user.api.signup.method_description=Register in the application as a regular user
# Exceptions
## ModelEntityNotFoundException
exception.model.entity.order.not_found=No order found
exception.model.entity.orderitem.not_found=No order item found
exception.model.entity.payment.not_found=No payment found
exception.model.entity.store.not_found=No store found
exception.model.entity.user.not_found=No user found
## InvalidIdentificationException
exception.model.entity.default.invalid_id=Invalid identifier
exception.model.entity.default.invalid_parameter=Parameter is invalid
## InvalidTokenException
exception.security.token.expired_or_invalid=Expired or invalid JWT token
## AuthenticationException
exception.security.auth.authentication_failure=Invalid username/password supplied
## UsernameAlreadyExistsException
exception.model.entity.user.username_already_exists=Username is already registered
